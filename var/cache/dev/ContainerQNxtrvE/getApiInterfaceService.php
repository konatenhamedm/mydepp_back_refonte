<?php

namespace ContainerQNxtrvE;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getApiInterfaceService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'App\Controller\Apis\Config\ApiInterface' shared autowired service.
     *
     * @return \App\Controller\Apis\Config\ApiInterface
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/Controller/FileTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Controller/Apis/Config/ApiInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/string/Slugger/SluggerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/string/Slugger/AsciiSlugger.php';

        $container->services['App\\Controller\\Apis\\Config\\ApiInterface'] = $instance = new \App\Controller\Apis\Config\ApiInterface(($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container)), ($container->privates['slugger'] ??= new \Symfony\Component\String\Slugger\AsciiSlugger('en')), ($container->privates['App\\Service\\SendMailService'] ?? $container->load('getSendMailServiceService')), ($container->privates['App\\Service\\Utils'] ?? $container->load('getUtilsService')), ($container->privates['security.user_password_hasher'] ?? $container->load('getSecurity_UserPasswordHasherService')), ($container->privates['.debug.http_client'] ?? self::get_Debug_HttpClientService($container)), ($container->privates['debug.serializer'] ?? self::getDebug_SerializerService($container)), ($container->privates['debug.validator'] ?? self::getDebug_ValidatorService($container)), ($container->privates['App\\Repository\\UserRepository'] ?? $container->load('getUserRepositoryService')), ($container->privates['App\\Service\\PaginationService'] ?? $container->load('getPaginationServiceService')), $container->getEnv('SEND_MAIL'), $container->getEnv('SUPER_ADMIN'));

        $instance->setContainer(($container->privates['.service_locator.Xgm7k44'] ?? $container->load('get_ServiceLocator_Xgm7k44Service'))->withContext('App\\Controller\\Apis\\Config\\ApiInterface', $container));

        return $instance;
    }
}
