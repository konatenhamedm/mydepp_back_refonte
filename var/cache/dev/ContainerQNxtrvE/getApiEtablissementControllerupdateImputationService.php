<?php

namespace ContainerQNxtrvE;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getApiEtablissementControllerupdateImputationService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.Yc5vmhh.App\Controller\Apis\ApiEtablissementController::updateImputation()' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.Yc5vmhh.App\\Controller\\Apis\\ApiEtablissementController::updateImputation()'] = (new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'sendMailService' => ['privates', 'App\\Service\\SendMailService', 'getSendMailServiceService', true],
            'etablissement' => ['privates', '.errored..service_locator.Yc5vmhh.App\\Entity\\Etablissement', NULL, 'Cannot autowire service ".service_locator.Yc5vmhh": it needs an instance of "App\\Entity\\Etablissement" but this type has been excluded in "config/services.yaml".'],
            'etablissementRepository' => ['privates', 'App\\Repository\\EtablissementRepository', 'getEtablissementRepositoryService', true],
            'userRepository' => ['privates', 'App\\Repository\\UserRepository', 'getUserRepositoryService', true],
        ], [
            'sendMailService' => 'App\\Service\\SendMailService',
            'etablissement' => 'App\\Entity\\Etablissement',
            'etablissementRepository' => 'App\\Repository\\EtablissementRepository',
            'userRepository' => 'App\\Repository\\UserRepository',
        ]))->withContext('App\\Controller\\Apis\\ApiEtablissementController::updateImputation()', $container);
    }
}
