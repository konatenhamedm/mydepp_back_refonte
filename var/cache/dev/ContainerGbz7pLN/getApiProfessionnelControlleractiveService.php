<?php

namespace ContainerGbz7pLN;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getApiProfessionnelControlleractiveService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.NG.x1gB.App\Controller\Apis\ApiProfessionnelController::active()' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.NG.x1gB.App\\Controller\\Apis\\ApiProfessionnelController::active()'] = (new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'professionnel' => ['privates', '.errored..service_locator.NG.x1gB.App\\Entity\\Professionnel', NULL, 'Cannot autowire service ".service_locator.NG.x1gB": it needs an instance of "App\\Entity\\Professionnel" but this type has been excluded in "config/services.yaml".'],
            'professionnelRepository' => ['privates', 'App\\Repository\\ProfessionnelRepository', 'getProfessionnelRepositoryService', true],
            'userRepository' => ['privates', 'App\\Repository\\UserRepository', 'getUserRepositoryService', true],
            'validator' => ['privates', 'debug.validator', 'getDebug_ValidatorService', false],
            'workflowRegistry' => ['privates', 'workflow.registry', 'getWorkflow_RegistryService', false],
            'professionRepository' => ['privates', 'App\\Repository\\ProfessionRepository', 'getProfessionRepositoryService', true],
            'utils' => ['privates', 'App\\Service\\Utils', 'getUtilsService', true],
            'racineSequenceRepository' => ['privates', 'App\\Repository\\RacineSequenceRepository', 'getRacineSequenceRepositoryService', true],
            'sendMailService' => ['privates', 'App\\Service\\SendMailService', 'getSendMailServiceService', true],
        ], [
            'professionnel' => 'App\\Entity\\Professionnel',
            'professionnelRepository' => 'App\\Repository\\ProfessionnelRepository',
            'userRepository' => 'App\\Repository\\UserRepository',
            'validator' => '?',
            'workflowRegistry' => '?',
            'professionRepository' => 'App\\Repository\\ProfessionRepository',
            'utils' => 'App\\Service\\Utils',
            'racineSequenceRepository' => 'App\\Repository\\RacineSequenceRepository',
            'sendMailService' => 'App\\Service\\SendMailService',
        ]))->withContext('App\\Controller\\Apis\\ApiProfessionnelController::active()', $container);
    }
}
