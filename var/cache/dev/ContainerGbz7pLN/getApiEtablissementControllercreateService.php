<?php

namespace ContainerGbz7pLN;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getApiEtablissementControllercreateService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.8dsUGxO.App\Controller\Apis\ApiEtablissementController::create()' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.8dsUGxO.App\\Controller\\Apis\\ApiEtablissementController::create()'] = (new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'hasher' => ['privates', 'security.user_password_hasher', 'getSecurity_UserPasswordHasherService', true],
            'niveauInterventionRepository' => ['privates', 'App\\Repository\\NiveauInterventionRepository', 'getNiveauInterventionRepositoryService', true],
            'utils' => ['privates', 'App\\Service\\Utils', 'getUtilsService', true],
            'libelleGroupeRepository' => ['privates', 'App\\Repository\\LibelleGroupeRepository', 'getLibelleGroupeRepositoryService', true],
            'sendMailService' => ['privates', 'App\\Service\\SendMailService', 'getSendMailServiceService', true],
            'transactionRepository' => ['privates', 'App\\Repository\\TransactionRepository', 'getTransactionRepositoryService', true],
            'genreRepository' => ['privates', 'App\\Repository\\GenreRepository', 'getGenreRepositoryService', true],
            'etablissementRepository' => ['privates', 'App\\Repository\\EtablissementRepository', 'getEtablissementRepositoryService', true],
            'typePersonneRepository' => ['privates', 'App\\Repository\\TypePersonneRepository', 'getTypePersonneRepositoryService', true],
        ], [
            'hasher' => '?',
            'niveauInterventionRepository' => 'App\\Repository\\NiveauInterventionRepository',
            'utils' => 'App\\Service\\Utils',
            'libelleGroupeRepository' => 'App\\Repository\\LibelleGroupeRepository',
            'sendMailService' => 'App\\Service\\SendMailService',
            'transactionRepository' => 'App\\Repository\\TransactionRepository',
            'genreRepository' => 'App\\Repository\\GenreRepository',
            'etablissementRepository' => 'App\\Repository\\EtablissementRepository',
            'typePersonneRepository' => 'App\\Repository\\TypePersonneRepository',
        ]))->withContext('App\\Controller\\Apis\\ApiEtablissementController::create()', $container);
    }
}
