<?php

namespace ContainerGbz7pLN;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getResetPasswordServiceService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\Service\ResetPasswordService' shared autowired service.
     *
     * @return \App\Service\ResetPasswordService
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/Service/ResetPasswordService.php';

        $a = ($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container));

        if (isset($container->privates['App\\Service\\ResetPasswordService'])) {
            return $container->privates['App\\Service\\ResetPasswordService'];
        }
        $b = ($container->privates['mailer.mailer'] ?? $container->load('getMailer_MailerService'));

        if (isset($container->privates['App\\Service\\ResetPasswordService'])) {
            return $container->privates['App\\Service\\ResetPasswordService'];
        }
        $c = ($container->privates['App\\Service\\SendMailService'] ?? $container->load('getSendMailServiceService'));

        if (isset($container->privates['App\\Service\\ResetPasswordService'])) {
            return $container->privates['App\\Service\\ResetPasswordService'];
        }

        return $container->privates['App\\Service\\ResetPasswordService'] = new \App\Service\ResetPasswordService($a, $b, ($container->services['router'] ?? self::getRouterService($container)), ($container->privates['security.csrf.token_generator'] ??= new \Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator()), $c);
    }
}
