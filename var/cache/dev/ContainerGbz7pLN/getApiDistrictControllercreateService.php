<?php

namespace ContainerGbz7pLN;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getApiDistrictControllercreateService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.cxK5Ih0.App\Controller\Apis\ApiDistrictController::create()' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.cxK5Ih0.App\\Controller\\Apis\\ApiDistrictController::create()'] = (new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'regionRepository' => ['privates', 'App\\Repository\\RegionRepository', 'getRegionRepositoryService', true],
            'districtRepository' => ['privates', 'App\\Repository\\DistrictRepository', 'getDistrictRepositoryService', true],
        ], [
            'regionRepository' => 'App\\Repository\\RegionRepository',
            'districtRepository' => 'App\\Repository\\DistrictRepository',
        ]))->withContext('App\\Controller\\Apis\\ApiDistrictController::create()', $container);
    }
}
