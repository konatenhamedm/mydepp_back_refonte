<?php

namespace ContainerGbz7pLN;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getApiCommuneControllercreateService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator..l6VPRh.App\Controller\Apis\ApiCommuneController::create()' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator..l6VPRh.App\\Controller\\Apis\\ApiCommuneController::create()'] = (new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'communeRepository' => ['privates', 'App\\Repository\\CommuneRepository', 'getCommuneRepositoryService', true],
            'villeRepository' => ['privates', 'App\\Repository\\VilleRepository', 'getVilleRepositoryService', true],
        ], [
            'communeRepository' => 'App\\Repository\\CommuneRepository',
            'villeRepository' => 'App\\Repository\\VilleRepository',
        ]))->withContext('App\\Controller\\Apis\\ApiCommuneController::create()', $container);
    }
}
