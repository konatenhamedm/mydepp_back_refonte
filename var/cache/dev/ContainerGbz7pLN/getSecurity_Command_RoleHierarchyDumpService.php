<?php

namespace ContainerGbz7pLN;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_Command_RoleHierarchyDumpService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'security.command.role_hierarchy_dump' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Command\SecurityRoleHierarchyDumpCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/SignalableCommandInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-bundle/Command/SecurityRoleHierarchyDumpCommand.php';

        $container->privates['security.command.role_hierarchy_dump'] = $instance = new \Symfony\Bundle\SecurityBundle\Command\SecurityRoleHierarchyDumpCommand(($container->privates['security.role_hierarchy'] ?? self::getSecurity_RoleHierarchyService($container)));

        $instance->setName('debug:security:role-hierarchy');
        $instance->setDescription('Dump the role hierarchy as a Mermaid flowchart');

        return $instance;
    }
}
